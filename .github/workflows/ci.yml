name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test on Node.js ${{ matrix.node-version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint --if-present

    - name: Run type check
      run: npm run type-check --if-present

    - name: Build project
      run: npm run build

    - name: Run tests
      run: npm test --if-present
      env:
        NODE_ENV: test

    - name: Check for security vulnerabilities
      run: npm audit --audit-level=high

  build-and-validate:
    name: Build and Validate
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build for production
      run: npm run build

    - name: Validate build artifacts
      run: |
        test -f dist/index.js
        test -d dist/services
        test -d dist/tools
        echo "âœ… Build artifacts validated"

    - name: Check bundle size
      run: |
        du -sh dist/
        echo "ðŸ“¦ Bundle size checked"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: dist/
        retention-days: 7

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=moderate

    - name: Check for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD

  documentation:
    name: Documentation Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check documentation completeness
      run: |
        # Check required documentation files
        test -f README.md
        test -f CONTRIBUTING.md
        test -f CHANGELOG.md
        test -f LICENSE
        test -f docs/DEPLOYMENT-GUIDE.md
        test -f docs/troubleshooting.md
        test -f docs/claude-desktop-integration.md
        echo "âœ… Documentation files validated"

    - name: Validate markdown links
      uses: gaurav-nelson/github-action-markdown-link-check@v1
      with:
        use-quiet-mode: 'yes'
        use-verbose-mode: 'yes'

  release-preparation:
    name: Release Preparation
    runs-on: ubuntu-latest
    needs: [test, build-and-validate, security-scan, documentation]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build production release
      run: npm run build

    - name: Generate release package
      run: |
        mkdir -p release
        cp -r dist/ release/
        cp package.json package-lock.json README.md LICENSE CHANGELOG.md release/
        cp -r docs/ release/
        cp -r config-templates/ release/
        cp -r scripts/ release/
        tar -czf wisphub-customercare-mcp-release.tar.gz -C release .

    - name: Upload release artifact
      uses: actions/upload-artifact@v4
      with:
        name: release-package
        path: wisphub-customercare-mcp-release.tar.gz
        retention-days: 30